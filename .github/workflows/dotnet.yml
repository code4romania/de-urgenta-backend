name: .NET

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

defaults:
  run: 
    working-directory: ./Src
    
jobs:
  build:

    runs-on: ubuntu-latest
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: gitcipass
          POSTGRES_USER: gitci
          POSTGRES_DB: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore DeUrgenta.sln
    - name: Build
      run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true DeUrgenta.sln
    - name: Apply migrations for test db
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef database update --no-build --project DeUrgenta.Domain --startup-project DeUrgenta.Api --context DeUrgentaContext --connection "Server=localhost;Port=5432;Database=de-urgenta-db;User Id=gitci;Password=gitcipass;"
     #   dotnet ef database update --no-build --project DeUrgenta.User.Api --startup-project DeUrgenta.Api --context UserDbContext --connection "Server=localhost;Port=5432;Database=de-urgenta-db;User Id=gitci;Password=gitcipass;"
    - name: Run unit & integration tests
      run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover DeUrgenta.sln
      env:
        # Connection string
        ConnectionStrings__TestingDbConnectionString: Server=localhost;Port=5432;Database=de-urgenta-db;User Id=gitci;Password=gitcipass; 
    - name: Upload dotnet test results
      uses: codecov/codecov-action@v1
