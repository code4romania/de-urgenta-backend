  version: '3.4'

  services:
    postgres:
      image: postgres
      container_name: postgres
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 10s
        timeout: 5s
        retries: 5   
      ports:
        - 5432:5432
    api:
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        ASPNETCORE_URLS: ${ASPNETCORE_URLS}
        ConnectionStrings__DbConnectionString: ${DB_CONNECTION_STRING}
        ConnectionStrings__IdentityDbConnectionString: ${DB_CONNECTION_STRING}
        EMailingSystem: ${EMAILING_SYSTEM_TYPE}
        SMTP__HOST: ${SMTP_HOST}
        SMTP__PORT: ${SMTP_PORT}
        SMTP__USER: ${SMTP_USER}
        SMTP__PASSWORD: ${SMTP_PASSWORD}
       
        #SendGrid__ApiKey: ${SENDGRID_API_KEY}
        #SendGrid__ClickTracking: ${SENDGRID_CLICK_TRACKING}

      ports:
        - 5040:80
      restart: on-failure
      depends_on:
        - "postgres"      

    recurent-jobs:
      build:
        context: .
        dockerfile: DeUrgenta.RecurringJobs.Dockerfile
      environment:
        ASPNETCORE_URLS: ${ASPNETCORE_URLS}
        ConnectionStrings__DbConnectionString: ${DB_CONNECTION_STRING}
        Hangfire__Dashboard__Username: ${HANGFIRE_USERNAME}
        Hangfire__Dashboard__Password: ${HANGFIRE_PASSWORD}
      ports:
        - 5041:80
      restart: on-failure
      depends_on:
        - "postgres"      