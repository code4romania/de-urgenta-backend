  version: '3.4'

  services:
    postgres:
      image: postgres
      container_name: postgres
      environment:
        - POSTGRES_PASSWORD=docker
        - POSTGRES_USER=docker
        - POSTGRES_DB=postgres
      ports:
        - 5432:5432
      volumes:
        - ./postgres_data:/var/lib/postgresql/data

    api:
      depends_on:
        - "postgres"
        - "identityserver"
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        - ASPNETCORE_URLS=http://+:80
        - ConnectionStrings__DbConnectionString: ${DB_CONNECTION_STRING}
        #- IdentityServerUrl=https://auth.deurgenta.hostmysite.ro
        - IdentityServerUrl: ${IDENTITYSERVER_URL}
      ports:
        - 5040:80
      restart: unless-stopped

    recurent-jobs:
      depends_on:
        - "postgres"
      build:
        context: .
        dockerfile: DeUrgenta.RecurringJobs.Dockerfile
      environment:
        - ASPNETCORE_URLS=http://+:80
        - ConnectionStrings__DbConnectionString: ${DB_CONNECTION_STRING}
        - Hangfire__Dashboard__Username=admin
        - Hangfire__Dashboard__Password=demo1234
      ports:
        - 5041:80
      restart: unless-stopped

    identityserver:
      depends_on:
        - "postgres"
      environment:
        AdminFromEmail: ${FROM_EMAIL}
        SendGrid:ApiKey: ${SENDGRID_API_KEY}
        ASPNETCORE_URLS: ${ASPNETCORE_URLS}
        ConnectionStrings__ApplicationDbContextConnection: ${DB_CONNECTION_STRING} 
        ClientApplications__0__RedirectUris: ${SWAGGER_REDIRECT_URIS}
        ClientApplications__0__AllowedCorsOrigins: ${SWAGGER_CORS}
      build:
          context: .
          dockerfile: DeUrgenta.IdentityServer/Dockerfile
      ports:
        - 5042:80
      container_name: identityserver
      hostname: identityserver
